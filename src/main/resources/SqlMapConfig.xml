<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd" >
<configuration>

    <!-- 引入外部配置文件 -->
    <properties resource="jdbc.properties"></properties>

    <!-- 设置全局属性 -->
    <settings>
        <!-- 控制台输出sql语句 -->
        <setting name="logImpl" value="STDOUT_LOGGING"/>

        <!-- lazyLoadingEnabled 当开启时,所有关联对象都会延迟加载。 特定关联关系中可通过设置 fetchType 属性来覆盖该项的开关状态。
                true 会发现数据库查询account的语句只有一条。
                false 会发现数据库查询account的语句,还有查询用户的sql语句。
        -->
        <setting name="lazyLoadingEnabled" value="true"/>

        <!-- aggressiveLazyLoading 开启时,任一方法的调用都会加载该对象的所有延迟加载属性。 否则每个延迟加载属性会按需加载 -->
        <setting name="aggressiveLazyLoading" value="false"/>

        <!-- 配置二级缓存开关 -->
        <setting name="cacheEnabled" value="true"/>
    </settings>
    
    <!-- 别名配置 alias 建议和实体类一致，虽然不区分大小写也是能够被识别-->
    <typeAliases>
        <typeAlias type="com.xiaomo.domain.User" alias="User"/>
        <typeAlias type="com.xiaomo.domain.Order" alias="Order"/>
        <package name="com.xiaomo.domain"/>
    </typeAliases>

    <!-- 配置类型转换器 -->
    <typeHandlers>
        <typeHandler handler="com.xiaomo.handler.MyHandler"></typeHandler>
    </typeHandlers>
    <!-- 数据源环境 -->
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"></transactionManager>
            <dataSource type="POOLED">
                <!-- 配置mysql的数据源的四个基本信息-->
                <property name="driver" value="${jdbc.driverClass}"/>
                <property name="url" value="${jdbc.jdbcUrl}"/>
                <property name="username" value="${jdbc.user}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    <!-- 加载映射环境 -->
    <mappers>
        <!-- 通过单独加载xml文件方式来实现映射 -->
        <mapper resource="mapper/UserMapper.xml"></mapper>
        <mapper resource="mapper/OrderMapper.xml"></mapper>
        <!-- 通过接口和注解的方式来实现映射 -->
        <!--<mapper class="com.xiaomo.mapper.UserMapper"></mapper>-->

        <!--<package name="com.xiaomo.mapper"/>-->
    </mappers>

</configuration>